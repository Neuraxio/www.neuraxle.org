<map id="inheritance0192eece9c" name="inheritance0192eece9c">
<area shape="rect" id="node1" title="Helper class that provides a standard way to create an ABC using" alt="" coords="5,246,75,273"/>
<area shape="rect" id="node2" href="../neuraxle.base.html#neuraxle.base.BaseStep" target="_top" title="Base class for a transformer step that can also be fitted." alt="" coords="467,246,559,273"/>
<area shape="rect" id="node3" href="../neuraxle.base.html#neuraxle.base.BaseTransformer" target="_top" title="Base class for a pipeline step that can only be transformed." alt="" coords="157,82,311,109"/>
<area shape="rect" id="node11" href="../neuraxle.base.html#neuraxle.base.TruncableSteps" target="_top" title="Step that contains multiple steps. :class:`Pipeline` inherits form this class." alt="" coords="737,391,881,418"/>
<area shape="rect" id="node9" href="../neuraxle.base.html#neuraxle.base.MetaStep" target="_top" title="MetaStep" alt="" coords="763,239,855,266"/>
<area shape="rect" id="node21" href="#neuraxle.steps.flow.SelectNonEmptyDataContainer" target="_top" title="A step that selects non empty data containers." alt="" coords="680,81,938,108"/>
<area shape="rect" id="node23" href="#neuraxle.steps.flow.SelectNonEmptyDataInputs" target="_top" title="A step that selects non empty data inputs." alt="" coords="693,5,925,32"/>
<area shape="rect" id="node4" href="#neuraxle.steps.flow.ChooseOneOrManyStepsOf" target="_top" title="A pipeline to allow choosing many steps using an hyperparameter." alt="" coords="1316,442,1531,469"/>
<area shape="rect" id="node5" href="../neuraxle.union.html#neuraxle.union.FeatureUnion" target="_top" title="Parallelize the union of many pipeline steps." alt="" coords="1064,391,1191,418"/>
<area shape="rect" id="node6" href="#neuraxle.steps.flow.ChooseOneStepOf" target="_top" title="ChooseOneStepOf" alt="" coords="1347,391,1500,418"/>
<area shape="rect" id="node7" href="#neuraxle.steps.flow.ExecuteIf" target="_top" title="ExecuteIf" alt="" coords="1077,340,1177,368"/>
<area shape="rect" id="node17" href="#neuraxle.steps.flow.IfExecutionPhaseIsThen" target="_top" title="If, at runtime, the execution phase is the same as the one given to the constructor, then execute wrapped step." alt="" coords="1316,340,1531,368"/>
<area shape="rect" id="node8" href="../neuraxle.base.html#neuraxle.base.HandleOnlyMixin" target="_top" title="A pipeline step that only requires the implementation of handler methods :" alt="" coords="436,347,589,374"/>
<area shape="rect" id="node10" href="#neuraxle.steps.flow.ExecutionPhaseSwitch" target="_top" title="ExecutionPhaseSwitch" alt="" coords="1029,442,1226,469"/>
<area shape="rect" id="node14" href="../neuraxle.base.html#neuraxle.base.ForceHandleOnlyMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="710,290,908,317"/>
<area shape="rect" id="node20" href="#neuraxle.steps.flow.ReversiblePreprocessingWrapper" target="_top" title="TruncableSteps with a preprocessing step(1), and a postprocessing step(2)" alt="" coords="985,493,1270,520"/>
<area shape="rect" id="node12" href="#neuraxle.steps.flow.ExpandDim" target="_top" title="Similar to numpys expand_dim function, ExpandDim step expands the dimension of all the data inside the data container." alt="" coords="1077,164,1177,191"/>
<area shape="rect" id="node19" href="#neuraxle.steps.flow.Optional" target="_top" title="A wrapper to nullify a step : nullify its hyperparams, and also nullify all of his behavior." alt="" coords="1081,290,1173,317"/>
<area shape="rect" id="node25" href="#neuraxle.steps.flow.TrainOrTestOnlyWrapper" target="_top" title="A wrapper to run wrapped step only in test mode, or only in train mode." alt="" coords="1020,239,1235,266"/>
<area shape="rect" id="node13" href="../neuraxle.base.html#neuraxle.base.ResumableStepMixin" target="_top" title="Mixin to add resumable function to a step, or a class that can be resumed, for example a checkpoint on disk." alt="" coords="719,157,899,185"/>
<area shape="rect" id="node15" href="../neuraxle.base.html#neuraxle.base.ForceHandleMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="431,296,594,324"/>
<area shape="rect" id="node16" href="../neuraxle.base.html#neuraxle.base.MixinForBaseTransformer" target="_top" title="Any steps/transformers within a pipeline that inherits of this class should implement BaseStep/BaseTransformer and initialize it before any mixin. This class checks that its the case at initialization." alt="" coords="122,170,346,198"/>
<area shape="rect" id="node22" href="../neuraxle.base.html#neuraxle.base.TransformHandlerOnlyMixin" target="_top" title="A pipeline step that only requires the implementation of _transform_data_container." alt="" coords="392,94,633,121"/>
<area shape="rect" id="node18" href="../neuraxle.base.html#neuraxle.base.MetaStepMixin" target="_top" title="A class to represent a step that wraps another step. It can be used for many things." alt="" coords="445,195,580,222"/>
<area shape="rect" id="node24" href="#neuraxle.steps.flow.TestOnlyWrapper" target="_top" title="A wrapper to run wrapped step only in test mode" alt="" coords="1347,265,1500,292"/>
<area shape="rect" id="node26" href="#neuraxle.steps.flow.TrainOnlyWrapper" target="_top" title="A wrapper to run wrapped step only in train mode" alt="" coords="1342,214,1505,242"/>
</map>
