<map id="inheritance4834dd3222" name="inheritance4834dd3222">
<area shape="rect" id="node1" title="Helper class that provides a standard way to create an ABC using" alt="" coords="5,127,73,153"/>
<area shape="rect" id="node4" href="neuraxle.base.html#neuraxle.base.BaseStep" target="_top" title="Base class for a transformer step that can also be fitted." alt="" coords="469,127,558,153"/>
<area shape="rect" id="node5" href="#neuraxle.checkpoints.BaseMiniDataCheckpointer" target="_top" title="Mini Data Checkpoint that uses joblib to create a checkpoint for a current id, and a data input or an expected output." alt="" coords="118,201,343,228"/>
<area shape="rect" id="node6" href="neuraxle.base.html#neuraxle.base.BaseTransformer" target="_top" title="Base class for a pipeline step that can only be transformed." alt="" coords="156,152,305,178"/>
<area shape="rect" id="node7" href="#neuraxle.checkpoints.BaseSummaryCheckpointer" target="_top" title="Summary Checkpointer to create a summary file that contains the list of all of the checkpoint current ids." alt="" coords="123,54,339,80"/>
<area shape="rect" id="node2" href="#neuraxle.checkpoints.BaseCheckpointer" target="_top" title="Base class to implement a step checkpoint or data container checkpoint." alt="" coords="701,226,858,253"/>
<area shape="rect" id="node19" href="#neuraxle.checkpoints.MiniDataCheckpointerWrapper" target="_top" title="A :class:`BaseCheckpointer` to checkpoint data inputs, and expected outputs with mini data checkpointers." alt="" coords="920,201,1170,228"/>
<area shape="rect" id="node21" href="#neuraxle.checkpoints.StepSavingCheckpointer" target="_top" title="StepCheckpointer is used by the Checkpoint step to save the fitted steps contained in the context of type ExecutionContext." alt="" coords="941,250,1149,277"/>
<area shape="rect" id="node3" href="neuraxle.base.html#neuraxle.base.NonTransformableMixin" target="_top" title="A pipeline step that has no effect at all but to return the same data without changes." alt="" coords="414,274,613,300"/>
<area shape="rect" id="node8" href="#neuraxle.checkpoints.Checkpoint" target="_top" title="Resumable Checkpoint Step to load, and save both data checkpoints, and step checkpoints." alt="" coords="1215,323,1321,349"/>
<area shape="rect" id="node18" href="#neuraxle.checkpoints.JoblibMiniDataCheckpointer" target="_top" title="Mini Data Checkpoint that uses joblib to create a joblib checkpoint file for a current id, and a data input or expected output." alt="" coords="393,225,634,251"/>
<area shape="rect" id="node20" href="#neuraxle.checkpoints.NullMiniDataCheckpointer" target="_top" title="NullMiniDataCheckpointer" alt="" coords="401,176,626,202"/>
<area shape="rect" id="node22" href="#neuraxle.checkpoints.TextFileSummaryCheckpointer" target="_top" title="Summary Checkpointer that uses a txt file to create a summary file that contains the list of all of the checkpoint current ids." alt="" coords="388,54,639,80"/>
<area shape="rect" id="node13" href="#neuraxle.checkpoints.DefaultCheckpoint" target="_top" title=":class:`Checkpoint` with joblib mini data checkpointers wrapped in a :class:`MiniDataCheckpointerWrapper`, and the default step saving checkpointer." alt="" coords="1366,323,1531,349"/>
<area shape="rect" id="node9" href="neuraxle.base.html#neuraxle.base.IdentityHandlerMethodsMixin" target="_top" title="A step that has a default implementation for all handler methods." alt="" coords="920,372,1170,398"/>
<area shape="rect" id="node10" href="neuraxle.base.html#neuraxle.base.ResumableStepMixin" target="_top" title="Mixin to add resumable function to a step, or a class that can be resumed, for example a checkpoint on disk." alt="" coords="693,323,866,349"/>
<area shape="rect" id="node11" href="#neuraxle.checkpoints.DataCheckpointType" target="_top" title="An enumeration." alt="" coords="144,5,317,31"/>
<area shape="rect" id="node12" title="Generic enumeration." alt="" coords="5,5,73,31"/>
<area shape="rect" id="node14" href="neuraxle.base.html#neuraxle.base.ForceHandleMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="435,372,592,398"/>
<area shape="rect" id="node16" href="neuraxle.base.html#neuraxle.base.ForceHandleOnlyMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="684,372,875,398"/>
<area shape="rect" id="node15" href="neuraxle.base.html#neuraxle.base.MixinForBaseTransformer" target="_top" title="Any steps/transformers within a pipeline that inherits of this class should implement BaseStep/BaseTransformer and initialize it before any mixin. This class checks that its the case at initialization." alt="" coords="123,347,339,373"/>
<area shape="rect" id="node17" href="neuraxle.base.html#neuraxle.base.HandleOnlyMixin" target="_top" title="A pipeline step that only requires the implementation of handler methods :" alt="" coords="439,421,588,447"/>
</map>
