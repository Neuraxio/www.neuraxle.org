<map id="inheritance04fd610fb2" name="inheritance04fd610fb2">
<area shape="rect" id="node1" title="Helper class that provides a standard way to create an ABC using" alt="" coords="41,402,108,428"/>
<area shape="rect" id="node2" href="api/neuraxle.pipeline.html#neuraxle.pipeline.BasePipeline" target="_top" title="BasePipeline" alt="" coords="234,159,357,185"/>
<area shape="rect" id="node6" href="api/neuraxle.base.html#neuraxle.base.BaseTransformer" target="_top" title="Base class for a pipeline step that can only be transformed." alt="" coords="473,402,620,428"/>
<area shape="rect" id="node8" href="api/neuraxle.base.html#neuraxle.base._HasMutations" target="_top" title="An internal class to represent a step that can be mutated." alt="" coords="231,305,360,331"/>
<area shape="rect" id="node9" href="api/neuraxle.base.html#neuraxle.base._HasHyperparamsSpace" target="_top" title="An internal class to represent a step that has hyperparameter spaces of type :class:`~neuraxle.hyperparams.space.HyperparameterSpace`." alt="" coords="201,353,390,380"/>
<area shape="rect" id="node10" href="api/neuraxle.base.html#neuraxle.base._HasHyperparams" target="_top" title="An internal class to represent a step that has hyperparameters of type :class:`~neuraxle.hyperparams.space.HyperparameterSamples`." alt="" coords="222,451,369,477"/>
<area shape="rect" id="node11" href="api/neuraxle.base.html#neuraxle.base._HasHashers" target="_top" title="An internal class to represent a step that has hashers." alt="" coords="239,499,352,526"/>
<area shape="rect" id="node12" href="api/neuraxle.base.html#neuraxle.base._HasSavers" target="_top" title="An internal class to represent a step that can be saved." alt="" coords="243,548,348,574"/>
<area shape="rect" id="node14" href="api/neuraxle.base.html#neuraxle.base._TransformerStep" target="_top" title="An internal class to represent a step that can be transformed, or inverse transformed." alt="" coords="218,597,373,623"/>
<area shape="rect" id="node21" href="api/neuraxle.pipeline.html#neuraxle.pipeline.Pipeline" target="_top" title="Fits and transform steps" alt="" coords="502,184,590,210"/>
<area shape="rect" id="node3" href="api/neuraxle.base.html#neuraxle.base.TruncableSteps" target="_top" title="Step that contains multiple steps. :class:`Pipeline` inherits form this class." alt="" coords="5,87,143,113"/>
<area shape="rect" id="node15" href="api/neuraxle.union.html#neuraxle.union.FeatureUnion" target="_top" title="Parallelize the union of many pipeline steps." alt="" coords="1054,14,1176,41"/>
<area shape="rect" id="node4" href="api/distributed/neuraxle.distributed.streaming.html#neuraxle.distributed.streaming.BaseQueuedPipeline" target="_top" title="Sub class of :class:`Pipeline`." alt="" coords="1029,135,1201,161"/>
<area shape="rect" id="node24" href="api/distributed/neuraxle.distributed.streaming.html#neuraxle.distributed.streaming.ParallelQueuedFeatureUnion" target="_top" title="Using :class:`QueueWorker`, run all steps in parallel using QueueWorkers." alt="" coords="1292,135,1531,161"/>
<area shape="rect" id="node5" href="api/neuraxle.pipeline.html#neuraxle.pipeline.MiniBatchSequentialPipeline" target="_top" title="Mini Batch Sequential Pipeline class to create a pipeline processing data inputs in batch." alt="" coords="689,135,938,161"/>
<area shape="rect" id="node23" href="api/steps/neuraxle.steps.numpy.html#neuraxle.steps.numpy.NumpyConcatenateOnAxis" target="_top" title="Numpy concetenation step where the concatenation is performed along the specified custom axis." alt="" coords="711,402,916,428"/>
<area shape="rect" id="node7" href="api/neuraxle.base.html#neuraxle.base._CouldHaveContext" target="_top" title="Step that can have a context." alt="" coords="214,402,377,428"/>
<area shape="rect" id="node13" href="api/neuraxle.base.html#neuraxle.base._HasRecursiveMethods" target="_top" title="An internal class to represent a step that has recursive methods." alt="" coords="201,256,390,282"/>
<area shape="rect" id="node16" href="api/neuraxle.base.html#neuraxle.base.ForceHandleOnlyMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="719,38,908,64"/>
<area shape="rect" id="node17" href="api/neuraxle.base.html#neuraxle.base.ForceHandleMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="468,87,624,113"/>
<area shape="rect" id="node18" href="api/neuraxle.base.html#neuraxle.base.MixinForBaseTransformer" target="_top" title="Any steps/transformers within a pipeline that inherits of this class should implement BaseStep/BaseTransformer and initialize it before any mixin. This class checks that its the case at initialization." alt="" coords="188,62,403,88"/>
<area shape="rect" id="node19" href="api/neuraxle.base.html#neuraxle.base.HandleOnlyMixin" target="_top" title="A pipeline step that only requires the implementation of handler methods :" alt="" coords="473,38,620,64"/>
<area shape="rect" id="node20" href="api/neuraxle.base.html#neuraxle.base._CustomHandlerMethods" target="_top" title="A class to represent a step that needs to add special behavior on top of the normal handler methods." alt="" coords="448,135,645,161"/>
<area shape="rect" id="node22" href="api/steps/neuraxle.steps.numpy.html#neuraxle.steps.numpy.NumpyConcatenateInnerFeatures" target="_top" title="Numpy concatenation step where the concatenation is performed along `axis=&#45;1`." alt="" coords="982,402,1247,428"/>
</map>
