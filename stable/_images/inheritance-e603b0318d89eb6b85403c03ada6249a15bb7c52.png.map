<map id="inheritancec06ea30694" name="inheritancec06ea30694">
<area shape="rect" id="node1" title="Helper class that provides a standard way to create an ABC using" alt="" coords="113,208,183,236"/>
<area shape="rect" id="node2" href="../neuraxle.base.html#neuraxle.base.BaseService" target="_top" title="Base class for all services registred into the :class:`ExecutionContext`." alt="" coords="337,208,456,236"/>
<area shape="rect" id="node3" href="../neuraxle.base.html#neuraxle.base.BaseStep" target="_top" title="Base class for a transformer step that can also be fitted." alt="" coords="808,158,901,185"/>
<area shape="rect" id="node4" href="../neuraxle.base.html#neuraxle.base.BaseTransformer" target="_top" title="Base class for a pipeline step that can only be transformed." alt="" coords="538,208,691,236"/>
<area shape="rect" id="node11" href="../neuraxle.base.html#neuraxle.base.MetaStep" target="_top" title="MetaStep" alt="" coords="1035,107,1128,134"/>
<area shape="rect" id="node5" href="../neuraxle.base.html#neuraxle.base.ForceHandleMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="773,5,936,33"/>
<area shape="rect" id="node7" href="../neuraxle.base.html#neuraxle.base.ForceHandleOnlyMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="983,56,1181,83"/>
<area shape="rect" id="node6" href="../neuraxle.base.html#neuraxle.base.MixinForBaseTransformer" target="_top" title="Any steps/transformers within a pipeline that inherits of this class should implement BaseStep/BaseTransformer and" alt="" coords="502,56,726,83"/>
<area shape="rect" id="node8" href="../neuraxle.base.html#neuraxle.base.HandleOnlyMixin" target="_top" title="A pipeline step that only requires the implementation of handler methods :" alt="" coords="778,56,931,83"/>
<area shape="rect" id="node13" href="../neuraxle.base.html#neuraxle.base.MetaStepMixin" target="_top" title="A class to represent a step that wraps another step. It can be used for many things." alt="" coords="787,107,922,134"/>
<area shape="rect" id="node10" href="#neuraxle.steps.output_handlers.InputAndOutputTransformerWrapper" target="_top" title="Wrapper step to transform both data inputs, and expected output at the same." alt="" coords="1227,56,1531,83"/>
<area shape="rect" id="node14" href="#neuraxle.steps.output_handlers.OutputTransformerWrapper" target="_top" title="A step that can sends the expected_outputs to the wrapped step" alt="" coords="1263,107,1496,134"/>
<area shape="rect" id="node9" href="#neuraxle.steps.output_handlers.InputAndOutputTransformerMixin" target="_top" title="Base output transformer step that can modify data inputs, and expected_outputs at the same time." alt="" coords="5,158,290,185"/>
<area shape="rect" id="node12" href="../neuraxle.base.html#neuraxle.base.MetaServiceMixin" target="_top" title="A mixin for services containing other services" alt="" coords="533,107,696,134"/>
</map>
