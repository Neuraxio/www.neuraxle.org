<map id="inheritance2a69344995" name="inheritance2a69344995">
<area shape="rect" id="node1" title="Helper class that provides a standard way to create an ABC using" alt="" coords="5,110,77,138"/>
<area shape="rect" id="node2" href="../neuraxle.pipeline.html#neuraxle.pipeline.BasePipeline" target="_top" title="BasePipeline" alt="" coords="751,10,881,38"/>
<area shape="rect" id="node3" href="../neuraxle.base.html#neuraxle.base.TruncableSteps" target="_top" title="Step that contains multiple steps. :class:`Pipeline` inherits form this class." alt="" coords="514,35,662,63"/>
<area shape="rect" id="node4" href="../neuraxle.base.html#neuraxle.base.BaseStep" target="_top" title="Base class for a transformer step that can also be fitted." alt="" coords="331,136,425,164"/>
<area shape="rect" id="node5" href="../neuraxle.base.html#neuraxle.base.BaseTransformer" target="_top" title="Base class for a pipeline step that can only be transformed." alt="" coords="125,187,283,215"/>
<area shape="rect" id="node8" href="#neuraxle.rest.flask.JSONDataBodyDecoder" target="_top" title="Class to be used within a FlaskRESTApiWrapper to convert input json to actual data (e.g.: arrays)" alt="" coords="491,111,685,139"/>
<area shape="rect" id="node9" href="#neuraxle.rest.flask.JSONDataResponseEncoder" target="_top" title="Base class to be used within a FlaskRESTApiWrapper to convert prediction output to json response." alt="" coords="473,212,703,240"/>
<area shape="rect" id="node7" href="../neuraxle.pipeline.html#neuraxle.pipeline.Pipeline" target="_top" title="Fits and transform steps" alt="" coords="929,10,1024,38"/>
<area shape="rect" id="node6" href="#neuraxle.rest.flask.FlaskRestApiWrapper" target="_top" title="Wrap a pipeline to easily deploy it to a REST API. Just provide a json encoder and a json decoder." alt="" coords="1072,10,1265,38"/>
</map>
