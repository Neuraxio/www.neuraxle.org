<map id="inheritancec06ea30694" name="inheritancec06ea30694">
<area shape="rect" id="node1" title="Helper class that provides a standard way to create an ABC using" alt="" coords="115,136,187,164"/>
<area shape="rect" id="node2" href="../neuraxle.base.html#neuraxle.base.BaseStep" target="_top" title="Base class for a transformer step that can also be fitted." alt="" coords="659,109,753,137"/>
<area shape="rect" id="node3" href="../neuraxle.base.html#neuraxle.base.BaseTransformer" target="_top" title="Base class for a pipeline step that can only be transformed." alt="" coords="381,161,539,189"/>
<area shape="rect" id="node10" href="../neuraxle.base.html#neuraxle.base.MetaStep" target="_top" title="MetaStep" alt="" coords="891,109,986,137"/>
<area shape="rect" id="node4" href="../neuraxle.base.html#neuraxle.base.ForceHandleMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="623,5,789,33"/>
<area shape="rect" id="node6" href="../neuraxle.base.html#neuraxle.base.ForceHandleOnlyMixin" target="_top" title="A step that automatically calls handle methods in the transform, fit, and fit_transform methods." alt="" coords="837,57,1040,85"/>
<area shape="rect" id="node5" href="../neuraxle.base.html#neuraxle.base.MixinForBaseTransformer" target="_top" title="Any steps/transformers within a pipeline that inherits of this class should implement BaseStep/BaseTransformer and initialize it before any mixin. This class checks that its the case at initialization." alt="" coords="345,57,575,85"/>
<area shape="rect" id="node7" href="../neuraxle.base.html#neuraxle.base.HandleOnlyMixin" target="_top" title="A pipeline step that only requires the implementation of handler methods :" alt="" coords="627,57,785,85"/>
<area shape="rect" id="node9" href="#neuraxle.steps.output_handlers.InputAndOutputTransformerWrapper" target="_top" title="Wrapper step to transform both data inputs, and expected output at the same." alt="" coords="1088,57,1399,85"/>
<area shape="rect" id="node12" href="#neuraxle.steps.output_handlers.OutputTransformerWrapper" target="_top" title="Transform expected output wrapper step that can sends the expected_outputs to the wrapped step" alt="" coords="1124,109,1363,137"/>
<area shape="rect" id="node8" href="#neuraxle.steps.output_handlers.InputAndOutputTransformerMixin" target="_top" title="Base output transformer step that can modify data inputs, and expected_outputs at the same time." alt="" coords="5,84,297,112"/>
<area shape="rect" id="node11" href="../neuraxle.base.html#neuraxle.base.MetaStepMixin" target="_top" title="A class to represent a step that wraps another step. It can be used for many things." alt="" coords="637,161,775,189"/>
</map>
